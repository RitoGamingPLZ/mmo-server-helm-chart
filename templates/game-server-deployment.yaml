{{- range .Values.server.zones }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.server.deployment.name }}-{{ .id }}
  namespace: {{ $.Release.Namespace }}
  labels:
    zone: {{ .id }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game-server
      zone: {{ .id }}
  template:
    metadata:
      labels:
        app: game-server
        zone: {{ .id }}
        version: {{ coalesce $.Values.server.version $.Values.server.image.tag  }}
    spec:
      terminationGracePeriodSeconds: 65
      containers:
        - name: game-server-zone-{{ .id }}-{{ $.Values.server.image.tag  }}
          image: "{{ $.Values.server.image.repository }}:{{ $.Values.server.image.tag }}"
          imagePullPolicy: {{ $.Values.server.image.pullPolicy }}
          args:
            - "--zone-id={{ .id }}"
          ports:
            - containerPort: {{ $.Values.server.wsPort }}
          resources:
            requests:
              cpu: {{ $.Values.server.deployment.requests.cpu }}
              memory: {{ $.Values.server.deployment.requests.memory }}
            limits:
              cpu: {{ $.Values.server.deployment.limits.cpu }}
              memory: {{ $.Values.server.deployment.limits.memory }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ $.Values.server.httpPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "echo 'Draining zone {{ .id }}'; sleep 60"]
{{- end }}
